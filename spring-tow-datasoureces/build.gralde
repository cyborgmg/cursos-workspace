plugins {
	id 'org.springframework.boot' version '2.2.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'eclipse'
	id 'java'
	id "org.sonarqube" version "2.8"
	id 'jacoco'
	id 'idea'
}

group = 'com.xxxxx'
version = '0.0.1'
sourceCompatibility = '11'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

ext {
	set('springCloudVersion', "Hoxton.SR3")
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://oss.jfrog.org/artifactory/oss-snapshot-local/' }
}

dependencies {

	implementation files('libs/POB-Middleware-Common-1.0.20.jar')
	implementation 'org.apache.kafka:kafka-streams'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.springframework.cloud:spring-cloud-stream'
	implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka'
	implementation 'org.springframework.cloud:spring-cloud-starter-stream-kafka'
	implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka-streams'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	compile group: 'org.postgresql', name: 'postgresql', version: '42.2.19'
	compile group: 'com.oracle.ojdbc', name: 'ojdbc8', version: '19.3.0.0'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	compileOnly 'org.projectlombok:lombok'

	annotationProcessor 'org.projectlombok:lombok'

	compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

sonarqube {
	properties {
		property 'sonar.coverage.exclusions',
				[
						'**/acquiaforms/**',
						'**/channel/**',
						'**/config/**',
						'**/enuns/**',
						'**/event/**',
						'**/restapi/**',
						'**/service/**',
						'**/utils/**',
						'**/Srv0086Application.java'
				]
	}
}

jacoco {
	toolVersion = "0.8.5"
	reportsDir = file("$buildDir/JacocoReportDir")
}

test {
	finalizedBy jacocoTestReport
	useJUnitPlatform()
}

jacocoTestReport {
	reports {
		xml.enabled true
		csv.enabled false
		html.destination file("${buildDir}/jacocoHtml")
	}
}
