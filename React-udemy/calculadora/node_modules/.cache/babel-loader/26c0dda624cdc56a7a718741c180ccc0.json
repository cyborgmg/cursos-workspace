{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/cyborg/java/Workspaces/cursos-workspace/React-udemy/calculadora/src/main/Calculator.jsx\";\nimport React, { Component } from 'react';\nimport Button from '../components/Button';\nimport Dispaly from '../components/Dispaly';\nimport './Calculator.css';\nconst initialState = {\n  displayValue: '0',\n  clearDisplay: false,\n  values: [0, 0],\n  current: 0\n};\nexport default class Calculator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...initialState\n    };\n    this.clearMemory = this.clearMemory.bind(this);\n    this.setOperation = this.setOperation.bind(this);\n    this.addDigit = this.addDigit.bind(this);\n  }\n\n  clearMemory() {\n    this.setState({ ...initialState\n    });\n  }\n\n  setOperation(operation) {\n    if (this.state.current === 0) {\n      this.setState({\n        operation,\n        current: 1,\n        clearDisplay: true\n      });\n    } else {\n      const equals = operation === '=';\n      const currentOperation = this.state.operation;\n      const values = [...this.state.values];\n\n      try {\n        values[0] = eval(` ${values[0]} ${currentOperation} ${values[1]} `);\n      } catch (e) {\n        values[0] = this.state.values[0];\n      }\n\n      values[1] = 0;\n      this.setState({\n        displayValue: values[0],\n        operation: equals ? null : operation,\n        current: equals ? 0 : 1,\n        clearDisplay: !equals\n      });\n    }\n  }\n\n  addDigit(n) {\n    if (n === '.' && this.state.displayValue.includes('.')) {\n      return;\n    }\n\n    const clearDisplay = this.state.displayValue === '0' || this.state.clearDisplay;\n    const currentValue = clearDisplay ? '' : this.state.displayValue;\n    const displayValue = currentValue + n;\n    this.setState({\n      displayValue,\n      clearDisplay: false\n    });\n\n    if (n !== '.') {\n      const i = this.state.current;\n      const newValue = parseFloat(displayValue);\n      const values = [...this.state.values];\n      values[i] = newValue;\n      this.setState({\n        values\n      });\n      console.log(values);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Calculator\",\n      children: [/*#__PURE__*/_jsxDEV(Dispaly, {\n        value: this.state.displayValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"AC\",\n        click: this.clearMemory,\n        triple: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"/\",\n        click: this.setOperation,\n        operation: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"7\",\n        click: this.addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"8\",\n        click: this.addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"9\",\n        click: this.addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"*\",\n        click: this.setOperation,\n        operation: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"4\",\n        click: this.addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"5\",\n        click: this.addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"6\",\n        click: this.addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"-\",\n        click: this.setOperation,\n        operation: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"1\",\n        click: this.addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"2\",\n        click: this.addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"3\",\n        click: this.addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"+\",\n        click: this.setOperation,\n        operation: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"0\",\n        click: this.addDigit,\n        double: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \".\",\n        click: this.addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"=\",\n        click: this.setOperation,\n        operation: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/cyborg/java/Workspaces/cursos-workspace/React-udemy/calculadora/src/main/Calculator.jsx"],"names":["React","Component","Button","Dispaly","initialState","displayValue","clearDisplay","values","current","Calculator","constructor","props","state","clearMemory","bind","setOperation","addDigit","setState","operation","equals","currentOperation","eval","e","n","includes","currentValue","i","newValue","parseFloat","console","log","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport Button from '../components/Button'\nimport Dispaly from '../components/Dispaly'\nimport './Calculator.css'\n\nconst initialState = {\n    displayValue: '0',\n    clearDisplay: false,\n    values: [0,0],\n    current: 0\n}\n\nexport default class Calculator extends Component {\n\n    state = {...initialState}\n\n    constructor(props){\n\n        super(props);\n\n        this.clearMemory = this.clearMemory.bind(this);\n        this.setOperation = this.setOperation.bind(this);\n        this.addDigit = this.addDigit.bind(this);\n    }\n\n    clearMemory(){\n        this.setState({...initialState});\n    }\n\n    setOperation(operation){\n\n        if(this.state.current === 0) {\n            this.setState({ operation, current: 1, clearDisplay: true });\n        }else{\n            const equals = operation === '=';\n            const currentOperation = this.state.operation;\n\n            const values = [ ...this.state.values ];\n\n            try{\n                values[0] = eval(` ${values[0]} ${currentOperation} ${values[1]} `);\n            }catch(e){\n                values[0] = this.state.values[0];\n            }\n\n            values[1] = 0;\n\n            this.setState({\n                displayValue: values[0] ,\n                operation: equals ? null : operation ,\n                current: equals ? 0 : 1 ,\n                clearDisplay: !equals,\n            })\n        }\n    }\n\n    addDigit(n){\n       \n        if( n === '.' && this.state.displayValue.includes('.')){\n            return \n        }\n       \n        const clearDisplay = this.state.displayValue === '0' || this.state.clearDisplay;\n\n        const currentValue = clearDisplay ? '' : this.state.displayValue;\n\n        const displayValue = currentValue + n;\n\n        this.setState( {displayValue, clearDisplay: false } );\n\n        if( n !== '.' ){\n            const i = this.state.current;\n            const newValue = parseFloat(displayValue);\n            const values = [...this.state.values];\n\n            values[i] = newValue;\n\n            this.setState({values});\n\n            console.log(values);\n        }\n\n    }\n\n    render(){\n\n        return (\n            <div className=\"Calculator\">\n                <Dispaly value={this.state.displayValue}/>\n                <Button label=\"AC\" click={this.clearMemory} triple />\n                <Button label=\"/\" click={this.setOperation} operation />\n                <Button label=\"7\" click={this.addDigit}/>\n                <Button label=\"8\" click={this.addDigit}/>\n                <Button label=\"9\" click={this.addDigit}/>\n                <Button label=\"*\" click={this.setOperation} operation />\n                <Button label=\"4\" click={this.addDigit}/>\n                <Button label=\"5\" click={this.addDigit}/>\n                <Button label=\"6\" click={this.addDigit}/>\n                <Button label=\"-\" click={this.setOperation} operation />\n                <Button label=\"1\" click={this.addDigit}/>\n                <Button label=\"2\" click={this.addDigit}/>\n                <Button label=\"3\" click={this.addDigit}/>\n                <Button label=\"+\" click={this.setOperation} operation />\n                <Button label=\"0\" click={this.addDigit} double />\n                <Button label=\".\" click={this.addDigit}/>\n                <Button label=\"=\" click={this.setOperation} operation />\n            </div>\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}