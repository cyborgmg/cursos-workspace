plugins {
    id 'org.springframework.boot' version '2.3.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id "org.sonarqube" version '2.8'
    id 'java'
    id 'jacoco'
    id 'eclipse'
    id 'application'
}

application {
    mainClassName = 'br.com.xxxxxxx.ServicesMainApplication'
}
 
group = 'br.com.xxxxxxx'
version = '1.0.3'
sourceCompatibility = '11'
 
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }

    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}
 
repositories {
    mavenCentral()
    maven { url 'https://xxxxxxxx/maven/' }
    flatDir {
        dirs 'libs'
    }
}
 
ext {
    set('springCloudVersion', "Hoxton.SR6")
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

 
dependencies {

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}
 
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
 
sonarqube {
    properties {
        property 'sonar.coverage.exclusions',
                [
                        '**/restapi/**',
                        '**/api/**',
                        '**/channel/**',
                        '**/config/**',
                        '**/dao/**',
                        '**/enuns/**',
                        '**/model/**',
                        '**/utils/**',
                        '**/ServicesMainApplication'

                ]
    }
}

jacoco {
    toolVersion = "0.8.6"
    reportsDir = file("$buildDir/JacocoReportDir")
}

jacocoTestReport {

    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }

    afterEvaluate {
        classDirectories.setFrom(
                files(classDirectories.files.collect
                        {
                            fileTree(dir: it,
                                    exclude: [
                                            '**/restapi/**',
                                            '**/api/**',
                                            '**/channel/**',
                                            '**/config/**',
                                            '**/dao/**',
                                            '**/enuns/**',
                                            '**/model/**',
                                            '**/utils/**',
                                            '**/ServicesMainApplication'
                                    ]
                            )
                        }
    ))}

}

test {
    finalizedBy jacocoTestReport
    useJUnitPlatform()
}


